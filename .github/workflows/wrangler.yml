---
name: "ðŸ¤  Wrangler"

on:
  workflow_dispatch: {}
  push:
    branches: [main]
    paths:
      - "lib/**"
      - "workers/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy-worker:
    strategy:
      fail-fast: false
      matrix:
        worker: [get, init, raw, cdn, r2]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment: wrangler
    steps:
      - uses: actions/checkout@v3
      - if: startsWith(matrix.worker, 'get')
        name: "ðŸ¤  Deploy > get"
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "workers/get"
          command: "publish"
      - if: startsWith(matrix.worker, 'init')
        name: "ðŸ¤  Deploy > init"
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "workers/init"
          command: "publish"
      - if: startsWith(matrix.worker, 'raw')
        name: "ðŸ¤  Deploy > raw"
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "workers/raw"
          command: "publish"
      - if: startsWith(matrix.worker, 'cdn')
        name: "ðŸ¤  Deploy > cache"
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "workers/cdn"
          command: "publish"
      - if: startsWith(matrix.worker, 'r2')
        name: "ðŸ¤  Deploy > r2"
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          workingDirectory: "workers/r2"
          command: "publish"
